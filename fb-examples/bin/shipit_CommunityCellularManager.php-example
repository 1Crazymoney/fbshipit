<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItCommunityCellularManager extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll($$)
      |> ShipItPathFilters::stripPaths(
        $$,
        ImmVector {
          '@^(?!fbcode/endaga/)@',
          '@^fbcode/endaga/cloud/ansible/files/freeswitch/etc/freeswitch'
            . '/dialplan/bts/11_globe_outbound.xml@',
          '@^fbcode/endaga/cloud/ansible/files/freeswitch/etc/freeswitch'
            . '/sip_profiles/globe@',
          '@^fbcode/endaga/cloud/ansible/hosts$@',
          '@^fbcode/endaga/cloud/ansible/prod_conf.ini@',
          '@^fbcode/endaga/cloud/ansible/files/openvpn/etc/openvpn'
            . '/server.key.enc@',
          '@^fbcode/endaga/cloud/endagaweb/migrations@',
          '@^fbcode/endaga/cloud/certifier/pki@',
          '@^fbcode/endaga/client/commands/fb_shipping.py@',
          '@^fbcode/endaga/magma@',
          '@.*\.crt$@',
          '@.*\.pem$@',
        },
        /* exceptions to directories to be stripped */
        ImmVector {
          '@^fbcode/endaga/cloud/endagaweb/migrations/__init__.py@',
        },
      )
      |> ShipItPathFilters::moveDirectories(
        $$,
        ImmMap {
          'fbcode/endaga/' => '',
        },
      );
  }

  <<__Override>>
  public static function getStaticConfig(
  ): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebookincubator',
      'githubProject' => 'communitycellularmanager',
      'sourceRoots' => ImmSet { 'fbcode/endaga' },
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItCommunityCellularManager::cliMain();
}
