<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItBistro extends FBShipItCLI {

  private static $move_directories = ImmMap {
    'fbcode/bistro/public_tld/' => '',
    'fbcode/bistro/bistro' => 'bistro',
    'fbcode/opensource/fbcode_builder' => 'bistro/build/ci/fbcode_builder',
    'fbcode/opensource/project_hashes/facebook' =>
      'bistro/build/ci/github_hashes',
  };

  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll($$, shape(
          'stripCommonFiles/exceptions' => ImmVector {
            # bistro/build/build.sh transforms these to CMakeLists.txt, so
            # we want to let external contributors change TARGETS.
            '@/TARGETS$@',
            # We want some of these revs for consistent builds, see the
            # github_hashes filters below.
            '@^fbcode/opensource/project_hashes/facebook@',
          },
        ))
      |> ShipItPathFilters::stripPaths($$, ImmVector {
        '@^fbcode/bistro/bistro/build/ci/fbcode_builder$@',
      })
      |> ShipItPathFilters::moveDirectories($$, self::$move_directories)
      |> ShipItPathFilters::stripPaths(
        $$,
        /* strip = */ ImmVector {
          '@(^|/)facebook[-_].*$@',
          '@(^|/)README.facebook$@',
          '@^bistro/build/ci/github_hashes@',
        },
        /* exceptions = */ ImmVector {
          // Keep just the Github hashes of Bistro's dependencies.
          '@^bistro/build/ci/github_hashes$@',
          '@^bistro/build/ci/github_hashes/'.
            '(folly|wangle|proxygen|fbthrift)-rev.txt$@',
          // This is just to appease ShipItFilterSanityCheckPhase
          '@^bistro/build/ci/github_hashes/shipit_test_file.txt$@',
        }
      );
  }

  <<__Override>>
  public static function getStaticConfig(
  ): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'bistro',
      'sourceRoots' => new ImmSet(self::$move_directories->keys()),
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItBistro::cliMain();
}
