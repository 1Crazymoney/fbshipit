<?hh
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once (__DIR__.'/../autoload.php');

final class ShipItBuckit extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return
      $changeset
        |> FBCommonFilters::applyAll($$)
        |> ShipItPathFilters::moveDirectories($$, static::getPathMappings())
        |> static::removeOssExtension($$)
        |> ShipItPathFilters::stripPaths(
            $$,
            ImmVector {
              '@infra_macros/macro_lib/convert/java.*\.py@',
            });
  }

  public static ImmSet<string> $FilesWithOssExtension = ImmSet {
    "infra_macros/package.json",
    "infra_macros/.buckconfig",
  };

  private static function removeOssExtension(
      \Facebook\ShipIt\ShipItChangeset $changeset) {
    return \Facebook\ShipIt\ShipItPathFilters::rewritePaths(
      $changeset,
      $path ==> {
        $stripped = preg_replace('@(.*)\.oss$@', '\1', $path);
        if(static::$FilesWithOssExtension->contains($stripped)) {
          return $stripped;
        } else {
          return $path;
        }
      });
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      'fbcode/experimental/pjameson/buckit/buckit/LICENSE' => 'LICENSE',
      'fbcode/experimental/pjameson/buckit/buckit/PATENTS' => 'PATENTS',
      'fbcode/experimental/pjameson/buckit/buckit/README' => 'README',
      'fbcode/experimental/pjameson/buckit/buckit/' => 'buckit/',
      'fbcode/experimental/pjameson/buckit/specs/' => 'specs/',
      'fbcode/tools/build/buck/infra_macros/' => 'infra_macros/',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebookexperimental',
      'githubProject' => 'buckit',
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItBuckit::cliMain();
}
