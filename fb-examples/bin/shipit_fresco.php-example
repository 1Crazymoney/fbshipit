<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItFresco extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    // Strip summary if it is not marked as @public
    $changeset = FBCommonFilters::stripSummariesByDefault($changeset);

    // Strip files that are not in the Fresco directory
    $changeset = ShipItPathFilters::stripPaths(
      $changeset,
      ImmVector {
        '@/whitelist_for_modules$@',
        '@/local.properties$@',
        '@dep_test.py$@',
        '@^fbandroid/libraries/fresco/fbcore$@',
      },
    );

    // Apply common changes to the changeset, like removing unwanted files
    $changeset = FBCommonFilters::applyAll(
      $changeset,
      shape(
        // We want to keep .mk files for native code
        'stripCommonFiles/exceptions' => ImmVector {
          '@\.mk$@',
        },
      ),
    );

    $changeset = ShipItPathFilters::moveDirectories(
      $changeset,
      static::getPathMappings(),
    );

    return $changeset;
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      // Move the Fresco files
      'fbandroid/libraries/fresco/' => '',
      // Move Fresco files in other directories
      'fbandroid/libraries/fbcore/' => 'fbcore/',
    };
  }

  <<__Override>>
  public static function getStaticConfig(
  ): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'fresco',
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItFresco::cliMain();
}
