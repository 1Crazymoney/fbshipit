<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItHHVM extends FBShipItCLI {
  public static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll(
          $$,
          shape(
            'stripCommonFiles/exceptions' => ImmVector {
              // HHVM will rewrite this SHA file into something publicly usable
              '@^fbcode/hphp/facebook/third-party-rev.txt@',
              // HHVM has an extension named "fb" which is public
              '@^fbcode/hphp/runtime/ext/fb/@',
            },
          ),
        )
      |> ShipItPathFilters::stripPaths(
          $$,
          ImmVector {
            '@^(?!fbcode/hphp)@',
            '@^fbcode/hphp/(?!hack).*Makefile$@',
          },
        )
      |> ShipItSubmoduleFilter::useSubmoduleCommitFromTextFile(
          $$,
          'fbcode/hphp/facebook/third-party-rev.txt',
          'third-party',
        )
      |> ShipItPathFilters::moveDirectories(
          $$,
          ImmMap {
            'fbcode/hphp/public_tld/' => '',
            'fbcode/hphp/' => 'hphp/',
          },
        );
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'hhvm',
      'sourceRoots' => ImmSet { 'fbcode/hphp' },
    );
  }

  <<__Override>>
  public static function getPhases(): ImmVector<ShipItPhase> {
    $parentPhases = parent::getPhases()->toVector();

    $phases = Vector { new HHVMEnvironmentCheckPhase() };

    foreach ($parentPhases as $phase) {
      $phases->add($phase);
      if ($phase instanceof ShipItGitHubInitPhase) {
        $phases->add(new HHVMCleanThirdPartyPhase());
      } elseif ($phase instanceof ShipItVerifyRepoPhase) {
        $phases->add(new HHVMBuildAndTestPhase());
      }
    }

    return $phases->toImmVector();
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItHHVM::cliMain();
}
