<?hh
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

use Facebook\ImportIt\ImportItRustPathFilters;

require_once(__DIR__.'/../autoload.php');

final class ShipItMononoke extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll($$)
      |> ShipItPathFilters::moveDirectories($$, static::getPathMappings());
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    // The order here is important -- ImportIt matches paths in reverse order.
    return ImmMap {
      'fbcode/scm/mononoke/' => '',
      'fbcode/common/rust/async-compression/' => 'async-compression/',
      'fbcode/common/rust/asyncmemo/' => 'asyncmemo/',
      'fbcode/common/rust/futures-ext/' => 'futures-ext/',
      'fbcode/common/rust/utils/py_tar_utils/' => 'py_tar_utils/',
      ImportItRustPathFilters::RUST_OSS_CONFIGS => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebookexperimental',
      'githubProject' => 'mononoke',
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItMononoke::cliMain();
}
