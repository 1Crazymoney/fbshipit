<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

class ShipItNuclide extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll($$)
      |> ShipItPathFilters::stripPaths(
          $$,
          ImmVector {
            // Our internal npm config
            '@^fbobjc/Tools/Nuclide/\.npmrc$@',
            '@^fbobjc/Tools/Nuclide/\.yarnrc$@',
            '@^fbobjc/Tools/Nuclide/yarn\.lock$@',
            // This goes beyond the common case, it covers fb-* and fb_*
            // e.g.: fb-package/index.js and fb-config.js
            '@(^|/)fb-[^/]*(/|$)@',
            '@(^|/)fb_[^/]*(/|$)@',
          },
        )
      |> ShipItPathFilters::moveDirectories($$, static::getPathMappings());
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      'fbobjc/Tools/Nuclide/' => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(
  ): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'nuclide',
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItNuclide::cliMain();
}
