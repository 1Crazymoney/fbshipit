<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

abstract class ShipItOpenBMC extends FBShipItCLI {
  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    $changeset = FBCommonFilters::stripSummariesByDefault($changeset);
    $changeset = FBCommonFilters::applyAll($changeset);

    $changeset = ShipItPathFilters::stripPaths(
      $changeset,
      ImmVector {
        # Remove facebook source mirrors.
        '@^source_mirror@',
        '@^facebook@',
        # Remove linux and uboot patches (for now, resolve independently).
        '@^meta-aspeed/recipes-kernel/linux/files/linux-.*@',
        '@^meta-aspeed/recipes-kernel/linux/linux-.*@',
        '@^meta-aspeed/recipes-bsp/u-boot/files/u-boot.*@',
        '@^meta-aspeed/recipes-bsp/u-boot/u-boot.*@',
        '@^meta-facebook/meta-fby2.*@',
        # Anything marked 'private' should not be synced.
        '@^.*private@',
      },
    );

    $changeset = ShipItPathFilters::moveDirectories(
      $changeset,
      static::getPathMappings(),
    );

    return $changeset;
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      # Provide an overlay to keep patches locally, but 'replace' the source
      # checkouts that exists for u-boot and Linux.
      'github/' => '',
      '' => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'meta-openbmc',
      'githubOrg' => 'facebook',
      'githubProject' => 'openbmc',
      'sourceRoots' => ImmSet {},
    );
  }
}

final class ShipItOpenBMCFido extends ShipItOpenBMC {
  <<__Override>>
  public static function getBaseConfig(): ShipItBaseConfig {
    return parent::getBaseConfig()->withSourceBranch('fido');
  }
}

final class ShipItOpenBMCHelium extends ShipItOpenBMC {
  <<__Override>>
  public static function getBaseConfig(): ShipItBaseConfig {
    return parent::getBaseConfig()
      ->withSourceBranch('helium')
      ->withDestinationBranch('helium');
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItOpenBMCFido::cliMain();
  ShipItOpenBMCHelium::cliMain();
}
