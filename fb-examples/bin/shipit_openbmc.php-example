<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

abstract class ShipItOpenBMC extends FBShipItCLI {

  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {

    return $changeset
      |> ShipItPathFilters::stripPaths(
        $$,
        ImmVector {
          // Explicitly remove the files replaced by the
          // github directory contents.
          '@^meta-facebook/classes/fb-only-network.bbclass@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot_2013.07.bb@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot_2016.07.bb@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2013.07.bb@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2016.07.bb@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot.inc@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot-mkimage_2016.07.bb@',
          '@^meta-aspeed/recipes-bsp/u-boot/verified-boot.inc@',
          '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_2.6.28.9.bb@',
          '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.1.bb@',
          '@^meta-aspeed/recipes-kernel/linux/linux-aspeed.inc@',
          # Remove linux and uboot patches (for now, resolve independently).
          '@^meta-aspeed/recipes-kernel/linux/files/linux-.*@',
          '@^meta-aspeed/recipes-kernel/linux/linux-.*@',
          '@^meta-aspeed/recipes-bsp/u-boot/files/u-boot.*@',
          '@^meta-aspeed/recipes-bsp/u-boot/u-boot.*@',
          # Anything marked 'private' should not be synced.
          '@^.*private@',
          # Remove private/confidential projects
          },
        )
      |> ShipItPathFilters::moveDirectories(
        $$,
        static::getPathMappings(),
        )
      |> FBOpenbmcCommonFilters::applyAll(
        $$,
        'openbmc',
        )
      |> FBCommonFilters::applyAll(
          $$,
          shape(
            // skip all the default strips.
            'stripCommonFiles/exceptions' => ImmVector {'/.*/'},
            'filterMessageSections/keepFields' => ImmSet {
              'summary',
              'pulled by',
              'reviewed by',
              'test plan',
            },
          ),
        );
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      # Provide an overlay to keep patches locally for various
      # minor tweaks to the github tree.
      'github/meta-facebook/classes/fb-only-network.bbclass' =>
        'meta-facebook/classes/fb-only-network.bbclass',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot_2013.07.bb' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot_2013.07.bb',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot_2016.07.bb' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot_2016.07.bb',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2013.07.bb' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2013.07.bb',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2016.07.bb' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2016.07.bb',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot.inc' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot.inc',
      'github/meta-aspeed/recipes-bsp/u-boot/u-boot-mkimage_2016.07.bb' =>
        'meta-aspeed/recipes-bsp/u-boot/u-boot-mkimage_2016.07.bb',
      'github/meta-aspeed/recipes-bsp/u-boot/verified-boot.inc' =>
        'meta-aspeed/recipes-bsp/u-boot/verified-boot.inc',
      'github/meta-aspeed/recipes-kernel/linux/linux-aspeed_2.6.28.9.bb' =>
        'meta-aspeed/recipes-kernel/linux/linux-aspeed_2.6.28.9.bb',
      'github/meta-aspeed/recipes-kernel/linux/linux-aspeed_4.1.bb' =>
        'meta-aspeed/recipes-kernel/linux/linux-aspeed_4.1.bb',
      'github/meta-aspeed/recipes-kernel/linux/linux-aspeed.inc' =>
        'meta-aspeed/recipes-kernel/linux/linux-aspeed.inc',
      # Keep the rest where it was
      '' => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'meta-openbmc',
      'githubOrg' => 'facebook',
      'githubProject' => 'openbmc',
    );
  }
}

final class ShipItOpenBMCFido extends ShipItOpenBMC {
  <<__Override>>
  public static function getBaseConfig(): ShipItBaseConfig {
    return parent::getBaseConfig()->withSourceBranch('fido');
  }
}

final class ShipItOpenBMCHelium extends ShipItOpenBMC {
  <<__Override>>
  public static function getBaseConfig(): ShipItBaseConfig {
    return parent::getBaseConfig()
      ->withSourceBranch('helium')
      ->withDestinationBranch('helium');
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItOpenBMCFido::cliMain();
  ShipItOpenBMCHelium::cliMain();
}
