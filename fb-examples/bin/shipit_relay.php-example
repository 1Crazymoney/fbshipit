<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItRelay extends FBShipItCLI {
  const JS_ROOT = 'xplat/js/';
  const RELAY_OSS = self::JS_ROOT.'RKJSModules/Libraries/Relay/oss/';

  // Open source modules.
  const GITHUB_ROOT = self::RELAY_OSS.'__github__/';
  const BABEL_PLUGIN_RELAY = self::RELAY_OSS.'babel-plugin-relay/';
  const REACT_RELAY = self::RELAY_OSS.'react-relay/';
  const RELAY_COMPILER = self::RELAY_OSS.'relay-compiler/';
  const RELAY_RUNTIME = self::RELAY_OSS.'relay-runtime/';

  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::stripSummariesByDefault($$)
      |> FBCommonFilters::applyAll($$)
      |> ShipItPathFilters::stripPaths(
          $$,
          ImmVector {
            // Don't include the README in the top directory.
            '@^'.self::RELAY_OSS.'README.md@',
            // Only sync out files from the Relay project
            // Ignore __forks__ (but permit __github__/__forks__/)
            '@^'.self::RELAY_OSS.'(?!__github__).+?/__forks__/@',
          },
        )
      |> ShipItPathFilters::moveDirectories(
        $$,
        static::getPathMappings(),
      );
  }

  <<__Override>>
  public static function getPathMappings(): ImmMap<string, string> {
    return ImmMap {
      // Modules
      self::GITHUB_ROOT => '',
      self::BABEL_PLUGIN_RELAY => 'packages/babel-plugin-relay/',
      self::REACT_RELAY => 'packages/react-relay/',
      self::RELAY_COMPILER => 'packages/relay-compiler/',
      self::RELAY_RUNTIME => 'packages/relay-runtime/',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'relay',
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItRelay::cliMain();
}
