<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

require_once(__DIR__.'/../autoload.php');

final class ShipItRpmBackports extends FBShipItCLI{

  const string BASE_DIR = 'rpms';

  # Add new open-source rpms here. Be sure to get sign-off
  # from the OpenSource team (opensource@fb.com).
  static ImmSet<string> $rpms = ImmSet{
    # BEGIN systemd-related stuff
    # new packages
    'mkosi',
    # modified packages from rawhide
    'dbus',
    'python34-cssselect',
    'python34-lxml',
    'util-linux',
    'systemd',
    # END systemd-related stuff
    'initscripts',
  };

  public static function getDirs(): ImmSet<string> {
    return self::$rpms->map(
        $rpm ==> self::BASE_DIR.'/'.$rpm
      )->concat(['rpms-github'])->toImmSet();
  }

  <<__Override>>
  protected static function projectFilterChangeset(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    $changeset = FBCommonFilters::applyAll($changeset);
    $changeset = OSTeamFilters::rewriteEmails($changeset);

    $changeset = ShipItPathFilters::stripPaths(
      $changeset,
      ImmVector {
        '@^rpms/[^/]*/original/.*@',
        '@^rpms/[^/]*/sources/[^/]*\.(tar\.gz|tar\.bz2|tar\.xz|tgz)@',
        '@README.facebook@',
        '@(^|/)OWNERS$@',
      },
    );

    // Strip the parent directories from the commit paths
    $changeset = ShipItPathFilters::moveDirectories(
      $changeset,
      ImmMap {
        'rpms-github/' => '',
      },
    );
    return $changeset;
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'opsfiles',
      'githubOrg' => 'facebookincubator',
      'githubProject' => 'rpm-backports',
      'sourceRoots' => self::getDirs(),
    );
  }
}

// Allow require() from unit test
if (isset($argv) && realpath($argv[0]) === realpath(__FILE__)) {
  ShipItRpmBackports::cliMain();
}
