<?hh
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBCommonFilters,
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItPathFilters,
};

final class FacebookDuckling extends FBShipItConfig {
  const string ROOT = 'duckling/';

  <<__Override>>
  protected static function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    return $changeset
      |> FBCommonFilters::applyAll($$)
      |> ShipItPathFilters::stripPaths(
          $$,
          ImmVector {
            '@^'.self::ROOT.'Duckling/Engine/Regex.hs@',
          },
        )
      |> ShipItPathFilters::moveDirectories($$, $get_path_mappings());
  }

  <<__Override>>
  protected static function projectImportChangeset(
    ShipItChangeset $changeset,
    FBSourceBranchConfig $branch_config,
  ): \Facebook\ShipIt\ShipItChangeset {
    return $changeset
      |> \Facebook\ShipIt\ShipItPathFilters::rewritePaths(
        $$,
        $path ==> str_replace(
          'Duckling/Engine/Regex.hs',
          'github/Duckling/Engine/Regex.hs',
          $path,
        ),
      )
      |> parent::projectImportChangeset($$, $branch_config);
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT.'github/Duckling/Engine/Regex.hs' =>
        'Duckling/Engine/Regex.hs',
      self::ROOT => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'si_sigma',
      'githubOrg' => 'facebook',
      'githubProject' => 'duckling',
    );
  }
}
