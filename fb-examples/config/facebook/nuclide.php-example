<?hh // strict
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\{
  FBSourceBranchConfig,
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItPathFilters,
  ShipItConditionalLinesFilter,
};

final class FacebookNuclide extends FBShipItConfig {
  const string ROOT = 'xplat/nuclide/';

  <<__Override>>
  protected static function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    return parent::defaultProjectFilterChangeset($changeset, $get_path_mappings)
      |> ShipItConditionalLinesFilter::commentLines($$, '@fb-only', '//')
      |> ShipItConditionalLinesFilter::uncommentLines($$, '@oss-only', '//');
  }

  <<__Override>>
  protected static function getDefaultStrippedFiles(): ImmVector<string> {
    return ImmVector {
      // This goes beyond the common case, it covers fb-* and fb_*
      // e.g.: fb-package/index.js and fb-config.js
      '@(^|/)fb-[^/]*(/|$)@',
      '@(^|/)fb_[^/]*(/|$)@',
    };
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'nuclide',
    );
  }

  <<__Override>>
  final protected static function projectImportChangeset(
    ShipItChangeset $changeset,
    FBSourceBranchConfig $branch_config,
  ): ShipItChangeset {
    return $changeset
      |> ShipItConditionalLinesFilter::uncommentLines($$, '@fb-only', '//')
      |> ShipItConditionalLinesFilter::commentLines($$, '@oss-only', '//')
      |> parent::projectImportChangeset($$, $branch_config);
  }
}
