<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * This file was moved from fbsource to www. View old history in diffusion:
 * https://fburl.com/vthuww43
 */
namespace Facebook\ShipIt\Config;

use type Facebook\ShipIt\{
  FBCommonFilters,
  FBOpenbmcCommonFilters,
  FBShipItCLIStaticConfig,
  FBShipItConfigeratorConfig,
  FBSourceBranchConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItImportDisallowedException,
  ShipItPathFilters,
  ShipItUtil,
};

final class FacebookOpenbmcPlugin extends FBShipItConfigeratorConfig {
  <<__Override>>
  public function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    return $changeset
      |> ShipItPathFilters::stripPaths($$, $this->getDefaultStrippedFiles())
      |> ShipItPathFilters::moveDirectories($$, $get_path_mappings())
      |> FBOpenbmcCommonFilters::applyAll($$, 'openbmc')
      |> FBCommonFilters::applyAll(
        $$,
        shape(
          // skip all the default strips.
          'stripCommonFiles/exceptions' =>
            $this->getStripCommonFileExceptions(),
          'filterMessageSections/keepFields' => ImmSet {
            'summary',
            'pulled by',
            'reviewed by',
            'test plan',
          },
        ),
      );
  }

  public static function getUnsupportedImportPaths(): ImmVector<string> {
    return ImmVector {
      '@^meta-facebook/classes/fb-only-network.bbclass@',
      '@^sync_yocto.sh@',
      '@^yocto/.gitignore@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot_2013.07.bb@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot_2016.07.bb@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2013.07.bb@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot-fw-utils_2016.07.bb@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot.inc@',
      '@^meta-aspeed/recipes-bsp/u-boot/u-boot-mkimage_2016.07.bb@',
      '@^meta-aspeed/recipes-bsp/u-boot/verified-boot.inc@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_2.6.28.9.bb@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.1.bb@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.17.bb@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.17.bbappend@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.18.bb@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_4.18.bbappend@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_5.0.bb@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed_5.0.bbappend@',
      '@^meta-aspeed/recipes-kernel/linux/linux-aspeed.inc@',
    };
  }

  <<__Override>>
  public function projectImportChangeset(
    ShipItChangeset $changeset,
    FBSourceBranchConfig $_branch_config,
  ): ShipItChangeset {
    return $changeset
      // These files are replaced by GitHub specific versions
      // at shipit time and should never come back to us on import
      // with modifications.
      |> self::errorOnPaths($$, static::getUnsupportedImportPaths());
  }

  <<\TestsBypassVisibility>>
  private static function errorOnPaths(
    ShipItChangeset $changeset,
    ImmVector<string> $unsupported_path_patterns,
  ): ShipItChangeset {
    foreach ($changeset->getDiffs() as $diff) {
      $path = $diff['path'];

      $match = ShipItUtil::matchesAnyPattern($path, $unsupported_path_patterns);

      if ($match !== null) {
        throw new ShipItImportDisallowedException($path);
      }
    }

    return $changeset;
  }
}
