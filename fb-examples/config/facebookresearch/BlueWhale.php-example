<?hh // strict
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBCommonFilters,
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItPathFilters,
};

final class FacebookresearchBluewhale extends FBShipItConfig {
  <<__Override>>
  protected static function getDefaultStrippedFiles(): ImmVector<string> {
    return ImmVector {
      '@^fbcode/fbjava/fb-spark-applications/rl/dqn-preprocessing/fb-pom.xml@',
      '@^fbcode/fbjava/fb-spark-applications/rl/dqn-preprocessing/sandcastle.ini@',
    };
  }

  <<__Override>>
  protected static function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    return $changeset
      |> ShipItPathFilters::rewritePaths(
        $$,
        $path ==> \str_replace(
          'oss-pom.xml',
          'pom.xml',
          \str_replace('/pom.xml', '/fb-pom.xml', $path)),
      )
      |> parent::defaultProjectFilterChangeset($$, $get_path_mappings);
  }

  <<__Override>>
  protected static function projectImportChangeset(
    ShipItChangeset $changeset,
    FBSourceBranchConfig $branch_config,
  ): \Facebook\ShipIt\ShipItChangeset {
    return $changeset
      |> parent::projectImportChangeset($$, $branch_config)
      |> \Facebook\ShipIt\ShipItPathFilters::rewritePaths(
        $$,
        $path ==> \str_replace(
          'pom.xml',
          'oss-pom.xml',
          $path,
        ),
      );
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      # Put the oss directory into root
      "fbcode/ml/rl/oss/" => "",

        # We want the contents of fbcode/ml/rl/... to appear in ml/rl/...
        "fbcode/ml/rl/" => "ml/rl/",

        # Put the dqn-preprocessing in preprocessing
        "fbcode/fbjava/fb-spark-applications/rl/dqn-preprocessing/" =>
        "preprocessing/",
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebookresearch',
      'githubProject' => 'BlueWhale',
    );
  }
}
