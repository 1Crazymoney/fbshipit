<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use type Facebook\ShipIt\{
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  ShipItChangeset,
  GetPathMappingsFn,
  ShipItPathFilters,
};

final class PytorchGlow extends FBShipItConfig {
  const string ROOT = 'fbcode/glow/glow/';

  <<__Override>>
  public function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT => '',
    };
  }

  private function getStrippedFiles(): ImmVector<string> {
    return ImmVector {"@lib/Backends/ROCm/.*@"};
  }

  <<__Override>>
  public function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    $changeset = parent::defaultProjectFilterChangeset(
      $changeset,
      $get_path_mappings,
    );
    $res = ShipItPathFilters::stripPaths($changeset, $this->getStrippedFiles());
    return $res;
  }

  <<__Override>>
  public function getSubmoduleMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT.'submodules/googletest.txt' => 'tests/googletest',
      self::ROOT.'submodules/onnx.txt' => 'thirdparty/onnx',
      self::ROOT.'submodules/fp16.txt' => 'thirdparty/fp16',
      self::ROOT.'submodules/OutputCheck.txt' => 'tests/OutputCheck',
      self::ROOT.'submodules/foxi.txt' => 'thirdparty/foxi',
      self::ROOT.'submodules/googlebenchmark.txt' => 'tests/googlebenchmark',
    };
  }

  <<__Override>>
  public function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'pytorch',
      'githubProject' => 'glow',
    );
  }
}
