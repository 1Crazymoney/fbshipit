<?hh // strict
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;

final class HHVMBuildAndTestPhase extends BuildAndTestPhase {
  const int MAX_FAILURES = 5;

  <<__Override>>
  protected function build(ShipItBaseConfig $config): void {
    $steps = ImmMap {
      'cleaning tree' => ImmVector { 'git', 'clean', '-Xdff' },
      'running cmake' => ImmVector {
        'cmake',
        '-DENABLE_ZEND_COMPAT=ON',
        '-DCMAKE_BUILD_TYPE=Debug',
        '-DMYSQL_UNIX_SOCK_ADDR=/dev/null',
        '-DENABLE_LD_GOLD=Off',
        '-DENABLE_EXTENSION_PGSQL=Off',
        '-DLIBINOTIFY_LIBRARY=/usr/lib64/libinotifytools.so.0',
        '.',
      },
      'building' => ImmVector { 'make', '-j40' },
    };

    self::runExecutableSteps($config, $steps);

    // Removed by the git clean step
    invariant(
      \file_exists($config->getDestinationPath()."/hphp/hhvm/hhvm"),
      'HHVM build exited with 0, but hhvm binary does not exist',
    );
  }

  <<__Override>>
  protected function test(ShipItBaseConfig $config): void {
    $exit_code = (new ShipItShellCommand(
      $config->getDestinationPath(),
      'hphp/hhvm/hhvm',
      'hphp/test/run',
      '--verbose',
      'quick',
    ))
      ->runSynchronously()
      ->getExitCode();
    invariant($exit_code === 0, 'expected exception if non-zero exit');
    \fwrite(\STDERR, "All tests passed.\n");
  }
}
