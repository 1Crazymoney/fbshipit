<?hh
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
namespace Facebook\ShipIt;


final class InferTest extends FBProjectBaseTest {
  <<__Override>>
  protected function usesOptInPublicSummaries(): bool {
    return true;
  }

  <<__Override>>
  protected static function map(
    ShipItChangeset $changeset,
  ): ShipItChangeset {
    return ShipItInfer::filterChangeset(
      $changeset,
    );
  }

  <<__Override>>
  public function getExamplePathMappings(): ImmMap<string, ?string> {
    # Example things that *should* make it through
    $keep = ImmVector {
      '.buckconfig',
      '.clang-format',
      '.gitignore',
      '.gitmodules',
      '.inferconfig',
      'CONTRIBUTING.md',
      'LICENSE',
      'PATENTS',
      'README.md',
      'INSTALL.md',
      'FILES.md',
      'build-infer.sh',
      'compile-fcp.sh',
      'dependencies/java/jsr-305/jsr305.jar',
      'docker/Dockerfile',
      'infer/Makefile.in',
      'examples/hello.c',
      'scripts/build_integration_tests.py',
      'scripts/check_clang_plugin_version.sh',
      'scripts/package_infer_source_with_clang_binaries.sh',
      'scripts/test.sh',
      'update-fcp.sh',
      'opam',
      'infer.install',
      'facebook-clang-plugins',
      'autogen.sh',
      'configure.ac',
      'install-sh',
      'm4/',
      'Makefile.config.in',
      'Makefile.in',
      'infer/tests/.idea/.name',
      'infer/tests/tests.iml',
      'infer/tests/codetoanalyze/c/errors/generic.mk',
    };
    # Example things that should *not* make it through
    $strip = ImmVector {
      'benchmarks/foo',
      'facebook/foo',
      'infer/src/facebook/foo',
      'ci_config.json',
      '.facebook',
      'setup-infer.sh',
      'setup.sh',
      'infer/bin/clang_frontend_stats.sh',
      'infer/bin/errors.pl',
      'infer/bin/inferiOS',
      'infer/bin/ios_csv_stats',
      'infer/bin/procs.pl',
      'infer/bin/stats.pl',
      'infer/lib/python/inferiOS',
      'infer/models/java/src/com/facebook/rti/',
      'infer/models/java/src/com/instagram/',
      'infer/models/objc/src/Facebook/',
      'infer/src/checkers/codequery_examples/examples.txt',
      'infer/src/facebook/',
      'infer/tests/codetoanalyze/java/checkers/GatekeeperChecker.java',
      'infer/tests/codetoanalyze/java/checkers/TraceCallSequence.java',
      'infer/tests/codetoanalyze/objc/'.
        'errors/memory_leaks_benchmark/FBViewExample.m',
      'infer/tests/endtoend/java/checkers/GatekeeperCheckerTest.java',
      'infer/tests/endtoend/java/checkers/TraceCallSequenceCheckerTest.java',
      'infer/tests/endtoend/objc/FBViewMemoryLeakTest.java',
      'scripts/create_binaries.sh',
      'scripts/create_tv_links.py',
      'scripts/facebook_dewey_release.sh',
      'scripts/gen_ios_tv_links.py',
      'scripts/infer_utils.py',
    };

    $map = Map {};
    foreach ($keep as $path) {
      $map[$path] = $path;
    }
    foreach ($strip as $path) {
      $map[$path] = null;
    }
    return $map->toImmMap();
  }
}
